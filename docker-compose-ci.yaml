version: "3.9"

services:
  frontend:
    image: sermalenk/skypro-front:lesson-38
    restart: always
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    image: andreygolovin5/diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      DEBUG: $DEDUG
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      SECRET_KEY: $SECRET_KEY
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      BOT_TOKEN: $BOT_TOKEN
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  bot:
    image: andreygolovin5/diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    environment:
      DEBUG: $DEBUG
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      SECRET_KEY: $SECRET_KEY
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      BOT_TOKEN: $BOT_TOKEN
    command: >
      sh -c "python3 manage.py runbot"
  migrations:
    image: andreygolovin5/diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DEBUG: $DEBUG
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      SECRET_KEY: $SECRET_KEY
      SOCIAL_AUTH_VK_OAUTH2_KEY: $SOCIAL_AUTH_VK_OAUTH2_KEY
      SOCIAL_AUTH_VK_OAUTH2_SECRET: $SOCIAL_AUTH_VK_OAUTH2_SECRET
      BOT_TOKEN: $BOT_TOKEN
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python3 manage.py migrate"

  db:
    image: postgres:15.1-alpine
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: always
    ports:
      - "5432:5432"
    volumes:
      - ./pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  pg_data:
