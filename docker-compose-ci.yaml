version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-34
    ports:
      - "80:80"
    depends_on:
      - api
  api:
    image: andreygolovin5/diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    restart: always
    environment:
      DEBUG: $DEDUG
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      SECRET_KEY: $SECRET_KEY
      ALLOWED_HOSTS: $ALLOWED_HOSTS
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    ports:
      - "8000:8000"
  migrations:
    image: andreygolovin5/diploma:$GITHUB_REF_NAME-$GITHUB_RUN_ID
    environment:
      DEBUG: $DEDUG
      POSTGRES_HOST: $POSTGRES_HOST
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
      SECRET_KEY: $SECRET_KEY
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python3 ./todolist/manage.py migrate"

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./pg_data:/var/lib/postgresql/data
